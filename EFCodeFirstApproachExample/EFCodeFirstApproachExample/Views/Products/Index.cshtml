@model List<DomainModels.Product>
@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>
<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 ">
    @foreach (var product in Model)
    {
        Html.RenderAction("DisplaySingleProduct", "Products" , new { product = product});  @*   Sends Child Request    *@
    }
</div>

@if (Model.Count > 0)
{
    <ul class="pagination justify-content-center">
        @{

            int previousPage = ViewBag.currentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            int nextPage = ViewBag.currentPage + 1;
            if (nextPage > ViewBag.numberOfPages)
            {
                nextPage = ViewBag.numberOfPages;
            }
        }
        <li class="page-item">
            @Html.ActionLink("Previous", "Index", "Products", new { currentPage = previousPage }, new { @class = "page-link" })
        </li>
        @for (int i = 1; i <= ViewBag.numberOfPages; i++)
        {
            if (i == ViewBag.currentPage)
            {
                <li class="page-item active" aria-current="page">
                    @Html.ActionLink(i.ToString(), "Index", "Products", new { currentPage = i }, new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item">
                    @Html.ActionLink(i.ToString(), "Index", "Products", new { currentPage = i }, new { @class = "page-link" })
                </li>
            }
        }
        <li class="page-item">
            @Html.ActionLink("Next", "Index", "Products", new { currentPage = nextPage }, new { @class = "page-link" })
        </li>
    </ul>
}


