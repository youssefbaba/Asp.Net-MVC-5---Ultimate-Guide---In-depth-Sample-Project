@model EFCodeFirstApproachExample.Models.CategoriesBrandsViewModel
@using EFCodeFirstApproachExample.HtmlHelpers
@{
    ViewBag.Title = "Create";
}

<h2>Create Product</h2>
@using (Html.BeginForm("Save", "Products", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.ProductName, new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.Product.ProductName, new { @class = "form-control", @placeholder = "Product Name" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.Price, new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.Product.Price, new { @type = "number", @class = "form-control", @placeholder = "Price", @min = "0" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.DOP, new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.Product.DOP, new { @type = "date", @class = "form-control" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.AvailabilityStatus, new { @class = "col-form-label" })
            @{
                var availabilityStatus = new[]
            {
                  new  { Text = "In Stock", Value = "InStock"},
                  new  { Text = "Out Of Stock", Value = "OutOfStock"},
            };
            }
            @foreach (var item in availabilityStatus)
            {
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Product.AvailabilityStatus, item.Value, new { @class = "form-check-input", @id = item.Value })
                    @Html.Label(item.Text, new { @class = "form-check-label", @for = item.Value })
                </div>
            }
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.CategoryID, new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.Product.CategoryID, new SelectList(Model.Categories, "CategoryID", "CategoryName"), "Please Select", new { @class = "form-control" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Product.BrandID, new { @class = "col-form-label" })
            @Html.DropDownListFor(model => model.Product.BrandID, new SelectList(Model.Brands, "BrandID", "BrandName"), "Please Select", new { @class = "form-control" })
        </div>
        <div class="form-group col-md-6">
            @Html.HiddenFor(model => model.Product.PhotoName)
            <div class="custom-file">
                @Html.File("custom-file-input", "photo", "Photo")
                @Html.Label("Choose file", new {@class="custom-file-label", @for="photo" } )
            </div>
        </div>
    </div>
    <div class="form-check d-flex align-items-center mb-3">
        @Html.CheckBox("Product.Active", new { @class = "form-check-input", @value = "true" })
        @Html.Label("Product.Active", new { @class = "form-check-label" })
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.Product.ProductID)
        <button type="button" class="btn btn-danger" id="js-cancel">Cancel</button>
        <button type="submit" class="btn btn-success">Create</button>
    </div>
}
@section scripts{
    <script>
        $(document).ready(function () {
            $("#js-cancel").click(function () {
                window.location.href = "@Url.Action("Index", "Products")";
            });

            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
                $("#Product_PhotoName").val(fileName)
            });
        });
    </script>
}

